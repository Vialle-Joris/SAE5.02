---
- name: Déploiement et configuration du serveur Minecraft
  hosts: localhost
  become: yes
  vars_prompt:
    - name: "minecraft_server_ip"
      prompt: "Entrez l'adresse IP du serveur (par exemple 192.168.1.1)"
      private: no

    - name: "sae5_path"
      prompt: "Entrez le chemin absolu du dossier contenant SAE5.02 (exemple : /home/joris/Documents/SAE5.02)"
      private: no

  tasks:
    # Étape 1 : Arborescence de base
    - name: Cloner le dépôt Git
      git:
        repo: 'https://github.com/Vialle-Joris/SAE5.02.git'
        dest: "{{ sae5_path }}"
      become: no

    - name: Créer les répertoires nécessaires
      file:
        path: "{{ sae5_path }}/{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - ansible/playbooks
        - ansible/roles
        - ansible/inventory
        - docker/configs
        - docker/mods
        - docker/worlds
      become: no

    - name: Créer les fichiers README
      copy:
        content: "README pour {{ item }}"
        dest: "{{ sae5_path }}/{{ item }}/README.md"
        mode: '0644'
      loop:
        - ansible/playbooks
        - ansible/roles
        - ansible/inventory
        - docker/configs
        - docker/mods
        - docker/worlds
      become: no

    # Étape 2 : Configuration environnement Docker pour Minecraft
    - name: Installation de Docker et Docker Compose
      include_tasks: ansible/playbooks/install_docker.yml

    # Étape 3 : Configuration du serveur Minecraft Forge (via Docker)
    - name: Créer le fichier docker-compose.yml
      copy:
        dest: "{{ sae5_path }}/docker/docker-compose.yml"
        content: |
          version: "3.8"
          services:
            minecraft:
              image: itzg/minecraft-server
              container_name: minecraft_server
              ports:
                - "25565:25565"
              environment:
                EULA: "TRUE"
                TYPE: "FORGE"
                VERSION: "1.20.1"
                FORGEVERSION: "47.3.12"
                DIFFICULTY: "normal"
                ONLINE_MODE: "FALSE"
              volumes:
                - ./configs:/data
                - ./mods:/mods
                - ./worlds:/world
              restart: unless-stopped
      become: no

    # Étape 4 : Modification du fichier server.properties
    - name: Modifier server.properties
      copy:
        dest: "{{ sae5_path }}/docker/configs/server.properties"
        content: |
          # Minecraft server properties
          # Updated for SAE5.02

          allow-flight=false
          allow-nether=true
          difficulty=normal
          enable-command-block=true
          gamemode=survival
          generate-structures=true
          level-name=SAE5.02
          max-players=20
          motd=Bienvenue sur le serveur SAE5.02 !\nRejoignez-nous pour une aventure unique.
          online-mode=false
          pvp=true
          server-port=25565
          view-distance=12
          simulation-distance=10
          spawn-animals=true
          spawn-monsters=true
          spawn-npcs=true
          enable-rcon=true
          rcon.password=19fe8672f3067dc8c29761b1
          rcon.port=25575
      become: no

    # Étape 5 : Lancement du serveur Docker
    - name: Lancer le serveur Docker Minecraft
      command: docker-compose up -d
      args:
        chdir: "{{ sae5_path }}/docker"
      become: no

    # Étape 6 : Bannissement du joueur "BlackHat"
    - name: Créer le fichier banned-players.json
      copy:
        content: |
          [
            {
              "uuid": "00000000-0000-0000-0000-000000000000",
              "name": "BlackHat",
              "created": "{{ ansible_date_time.iso8601 }}",
              "source": "Server",
              "expires": "forever",
              "reason": "Utilisateur interdit"
            }
          ]
        dest: "{{ sae5_path }}/docker/configs/banned-players.json"
        mode: '0644'
      become: no

    - name: Appliquer le bannissement via RCON
      command: docker exec minecraft_server rcon-cli ban BlackHat "Utilisateur interdit"
      ignore_errors: yes
      become: no

    # Étape 7 : Déploiement des mods
    - name: Copier les fichiers .jar des mods dans le dossier correct
      command: cp -r {{ sae5_path }}/mods/*.jar {{ sae5_path }}/docker/mods/
      become: yes

    - name: Redémarrer le serveur pour appliquer les mods
      command: docker restart minecraft_server
      become: no

    # Étape 8 : Configuration de la sauvegarde automatique
    - name: Créer un répertoire de sauvegarde s'il n'existe pas
      file:
        path: /home/{{ ansible_user }}/minecraft-server/worlds_backups
        state: directory
        mode: '0755'
      become: yes

    - name: Sauvegarder les mondes Minecraft
      command: tar -czf /home/{{ ansible_user }}/minecraft-server/worlds_backups/backup_{{ ansible_date_time.iso8601 }}.tar.gz /home/{{ ansible_user }}/minecraft-server/world/
      args:
        creates: /home/{{ ansible_user }}/minecraft-server/worlds_backups/backup_{{ ansible_date_time.iso8601 }}.tar.gz
      become: yes

    - name: Sauvegarder les fichiers de configuration
      command: tar -czf /home/{{ ansible_user }}/minecraft-server/worlds_backups/config_backup_{{ ansible_date_time.iso8601 }}.tar.gz /home/{{ ansible_user }}/minecraft-server/configs/
      args:
        creates: /home/{{ ansible_user }}/minecraft-server/worlds_backups/config_backup_{{ ansible_date_time.iso8601 }}.tar.gz
      become: yes

    # Étape 9 : Configuration de la tâche cron pour les sauvegardes
    - name: Créer une tâche cron pour les sauvegardes
      cron:
        name: "Sauvegarde quotidienne du serveur Minecraft"
        minute: "0"
        hour: "3"
        job: "ansible-playbook /home/{{ ansible_user }}/SAE5.02/ansible/playbooks/backup_server.yml"
      become: yes
