---
- name: Déploiement de l'outil de monitoring (Grafana) et collecte des données
  hosts: localhost
  become: yes
  become_method: sudo
  vars_prompt:
    - name: "server_ip"
      prompt: "Quelle adresse IP souhaitez-vous utiliser pour le fichier hosts ?"
      private: no
    - name: "project_path"
      prompt: "Chemin absolu où est situé votre répertoire SAE5.02 (se termine par /SAE5.02/) ?"
      private: no
      default: "~/SAE5.02"

  tasks:
    # Normalisation du chemin du projet
    - name: Expander le chemin utilisateur (~) dans project_path
      set_fact:
        project_path_expanded: "{{ project_path | expanduser }}"

    # Installer les dépendances nécessaires pour Grafana
    - name: Installer les dépendances nécessaires pour Grafana et Prometheus
      apt:
        name:
          - apt-transport-https
          - software-properties-common
          - curl
        state: present
        update_cache: yes

    # Télécharger et ajouter la clé GPG de Grafana
    - name: Télécharger et ajouter la clé GPG de Grafana
      shell: |
        curl -fsSL https://packages.grafana.com/gpg.key | gpg --dearmor -o /usr/share/keyrings/grafana-archive-keyring.gpg
      become: yes

    # Ajouter le repository Grafana
    - name: Ajouter le repository Grafana
      apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/grafana-archive-keyring.gpg] https://packages.grafana.com/oss/deb stable main"
        state: present
      become: yes

    # Mettre à jour les paquets et installer Grafana
    - name: Mettre à jour les paquets et installer Grafana
      apt:
        name:
          - grafana
        state: present

    - name: Vérifier que Grafana est démarré et activé
      service:
        name: grafana-server
        state: started
        enabled: yes

    # Installer Prometheus depuis un dépôt alternatif (Ubuntu officiel)
    - name: Installer Prometheus à partir du dépôt Ubuntu officiel
      apt:
        name:
          - prometheus
        state: present
        update_cache: yes
      become: yes

    - name: Démarrer Prometheus
      service:
        name: prometheus
        state: started
        enabled: yes

    # Configuration de Grafana pour utiliser Prometheus comme source de données
    - name: Ajouter Prometheus comme source de données dans Grafana
      shell: |
        curl -X POST -H "Content-Type: application/json" \
        -d '{"name":"Prometheus","type":"prometheus","url":"http://localhost:9090","access":"proxy"}' \
        http://admin:admin@localhost:3000/api/datasources
      args:
        creates: "/tmp/grafana_datasource_setup_done"

    # Installation des Dashboards pour Grafana pour surveiller CPU, mémoire et latence réseau
    - name: Importer un Dashboard pour la surveillance du CPU et de la mémoire
      shell: |
        curl -X POST -H "Content-Type: application/json" \
        -d '{
              "dashboard": {
                "id": null,
                "title": "System Monitoring",
                "tags": ["system"],
                "timezone": "browser",
                "panels": [
                  {
                    "title": "CPU Usage",
                    "type": "graph",
                    "targets": [
                      {
                        "expr": "rate(cpu_seconds_total[10s])",
                        "legendFormat": "CPU Usage"
                      }
                    ]
                  },
                  {
                    "title": "Memory Usage",
                    "type": "graph",
                    "targets": [
                      {
                        "expr": "node_memory_Active_bytes / node_memory_MemTotal_bytes * 100",
                        "legendFormat": "Memory Usage"
                      }
                    ]
                  },
                  {
                    "title": "Network Latency",
                    "type": "graph",
                    "targets": [
                      {
                        "expr": "ping_rtt",
                        "legendFormat": "Network Latency"
                      }
                    ]
                  }
                ]
              }
            }' \
        http://admin:admin@localhost:3000/api/dashboards/db
      args:
        creates: "/tmp/grafana_dashboard_import_done"

    # Création de répertoire pour logs et backup
    - name: Créer un répertoire pour les logs et backups
      file:
        path: "{{ project_path_expanded }}/docker/grafana-logs"
        state: directory
        mode: '0755'

    # Configuration du cron pour redémarrer régulièrement le monitoring si nécessaire
    - name: Ajouter un cron pour redémarrer Grafana tous les jours à 3h
      cron:
        name: "Redémarrage de Grafana"
        minute: "0"
        hour: "3"
        job: "systemctl restart grafana-server"
