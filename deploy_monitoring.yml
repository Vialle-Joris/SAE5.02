---
- name: Déploiement et installation de Docker, Docker Compose et Grafana
  hosts: localhost
  become: yes
  tasks:
    # Demander l'adresse IP de la machine
    - name: Demander l'adresse IP de la machine
      set_fact:
        ip_address: "{{ lookup('pipe', 'ip addr show | grep inet | grep -v inet6 | awk \'{print $2}\' | cut -d/ -f1') }}"

    # Demander le chemin absolu du répertoire SAE5.02
    - name: Demander le chemin absolu du répertoire SAE5.02
      set_fact:
        sae5_path: "{{ lookup('env', 'HOME') }}/SAE5.02"

    # Désinstaller les versions conflictuelles de containerd
    - name: Désinstaller les versions conflictuelles de containerd
      apt:
        name: "{{ item }}"
        state: absent
      loop:
        - containerd
        - containerd.io
      become: yes

    # Mise à jour des paquets et installation de Docker si nécessaire
    - name: Mise à jour des paquets et installation de Docker et Docker Compose
      apt:
        update_cache: yes
        name:
          - docker.io
          - docker-compose
        state: present
      become: yes

    # Vérification du statut de Docker et Docker Compose
    - name: Vérification du statut de Docker
      service:
        name: docker
        state: started
        enabled: true
      become: yes

    - name: Vérification du statut de Docker Compose
      command: docker-compose --version
      become: yes
      register: docker_compose_version
      ignore_errors: yes

    # Installation de Docker Compose si nécessaire
    - name: Installer Docker Compose si nécessaire
      apt:
        name: docker-compose
        state: present
      become: yes
      when: docker_compose_version.rc != 0

    # Installation de Grafana (monitoring)
    - name: Ajouter le dépôt Grafana
      apt_repository:
        repo: "deb https://packages.grafana.com/oss/deb stable main"
        state: present
      become: yes

    - name: Ajouter la clé GPG de Grafana
      apt_key:
        url: "https://packages.grafana.com/gpg.key"
        state: present
      become: yes

    - name: Mettre à jour les paquets
      apt:
        update_cache: yes
      become: yes

    - name: Installer Grafana
      apt:
        name: grafana
        state: present
      become: yes

    # Démarrage et activation du service Grafana
    - name: Démarrer et activer Grafana
      service:
        name: grafana-server
        state: started
        enabled: true
      become: yes

    # Configuration de la collecte de données toutes les 10 secondes
    - name: Créer le fichier de configuration de collecte de données
      copy:
        dest: "{{ sae5_path }}/docker/grafana_config.json"
        content: |
          {
            "cpu_monitoring": {
              "interval": 10
            },
            "memory_monitoring": {
              "interval": 10
            },
            "network_latency": {
              "interval": 10
            }
          }
      become: yes

    # Configurer Grafana pour afficher les données
    - name: Configurer Grafana pour afficher les graphiques
      command: |
        grafana-cli plugins install grafana-piechart-panel
        service grafana-server restart
      become: yes
